package crawlers

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"time"
)

import botio "opb_bot/lib"

const egs_url = "https://store-site-backend-static-ipv4.ak.epicgames.com/freeGamesPromotions?locale=ru&country=UA&allowCountries=UA"

type EGSList struct {
	ID          string
	URL         string
	Description string
	Title       string
}

func ParseFreeEgsGamesUrls() (games []EGSList, err error) {

	res, err := http.Get(egs_url)
	if err != nil {
		return
	}
	defer res.Body.Close()
	if res.StatusCode != 200 {
		message := fmt.Sprintf("status code error: %d %s", res.StatusCode, res.Status)
		err = fmt.Errorf(message)
		return
	}
	body, err := ioutil.ReadAll(res.Body)

	var result AutoGeneratedEGSResponse
	if err := json.Unmarshal(body, &result); err != nil { // Parse []byte to the go struct pointer
		fmt.Println("Can not unmarshal JSON")
	}

	elements := result.Data.Catalog.SearchStore.Elements
	for _, element := range elements {
		offers := element.Promotions.PromotionalOffers
		if offers == nil {
			continue
		}

		for _, offer_parent := range offers {
			for _, offer := range offer_parent.PromotionalOffers {
				botio.PrintType(offer)
				now := time.Now()
				if offer.StartDate.Before(now) && offer.EndDate.After(now) {
					productUrl := "https://www.epicgames.com/store/ru/p/" + element.ProductSlug
					games = append(games, EGSList{element.ID, productUrl, element.Description, element.Title})
				}
			}
		}
	}

	return games, nil
}
