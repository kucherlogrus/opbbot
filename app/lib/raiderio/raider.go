package raiderio

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"net/url"
)

const api_url = "https://raider.io"

type RaiderApi struct {
	api_url string
}

func CreateApi() *RaiderApi {
	return &RaiderApi{
		api_url: api_url,
	}
}

func (ra *RaiderApi) GetCurrentAffixes() (*AutoGeneratedActiveAffixes, error) {
	raw_resp, err := ra.__callApi("GET", "/api/v1/mythic-plus/affixes", nil)
	if err != nil {
		return nil, err
	}

	var result AutoGeneratedActiveAffixes
	if err = json.Unmarshal(raw_resp, &result); err != nil {
		fmt.Println("Can not unmarshal JSON")
		return nil, err
	}

	return &result, nil
}

func (ra *RaiderApi) __callApi(method string, endpoint string, params map[string]interface{}) (raw_resp []byte, err error) {
	var resp *http.Response
	if method == "GET" {
		qparams := url.Values{}
		if params != nil {
			for key, value := range params {
				qparams.Add(key, fmt.Sprintf("%v", value))
			}
		}

		qparams.Add("region", "eu")
		qparams.Add("locale", "ru")
		full_url := ra.api_url + endpoint + "?" + qparams.Encode()
		resp, err = http.Get(full_url)
		if err != nil {
			return nil, err
		}
		defer resp.Body.Close()
		body, err := ioutil.ReadAll(resp.Body)
		return body, err

	}
	return nil, fmt.Errorf("Method : %s doesn't support yet", method)
}
